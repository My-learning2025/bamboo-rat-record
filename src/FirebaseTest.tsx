import React, { useState, useEffect } from 'react';
import { getAllRecords, RecordData } from './firebaseService';
import { ensureAuthenticated } from './auth';

interface FirebaseTestProps {
    onBack?: () => void;
}

const FirebaseTest: React.FC<FirebaseTestProps> = ({ onBack }) => {
    const [records, setRecords] = useState<RecordData[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string>('');
    const [authStatus, setAuthStatus] = useState<string>('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö...');

    useEffect(() => {
        const fetchData = async () => {
            try {
                console.log('üî• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase...');

                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô
                setAuthStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô...');
                const user = await ensureAuthenticated();
                if (user) {
                    setAuthStatus(`‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${user.uid}`);
                } else {
                    setAuthStatus('‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
                }

                // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                const data = await getAllRecords();
                console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data);
                setRecords(data);
                setError('');
            } catch (err: any) {
                console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);

                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢
                if (err.code === 'permission-denied') {
                    setError('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase Security Rules');
                } else if (err.code === 'unavailable') {
                    setError('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï');
                } else {
                    setError(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message || err}`);
                }
            } finally {
                setLoading(false);
            }
        };

        fetchData();
    }, []);

    if (loading) {
        return <div style={{ padding: '20px' }}>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>;
    }

    if (error) {
        return <div style={{ padding: '20px', color: 'red' }}>‚ùå {error}</div>;
    }

    return (
        <div style={{ padding: '20px' }}>
            {onBack && (
                <button
                    onClick={onBack}
                    style={{
                        background: '#2196f3',
                        color: 'white',
                        border: 'none',
                        padding: '8px 16px',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        marginBottom: '20px',
                        fontSize: '0.9rem',
                    }}
                >
                    ‚Üê ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
                </button>
            )}

            <h1>üî• Firebase Connection Test</h1>
            <p><strong>üîê ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô:</strong> {authStatus}</p>

            {!error && !loading && (
                <>
                    <h2>‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h2>
                    <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</strong> {records.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
                </>
            )}

            {records.length > 0 && (
                <div>
                    <h3>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</h3>
                    {records.map((record, index) => (
                        <div key={record.id || index} style={{
                            border: '1px solid #ccc',
                            margin: '10px 0',
                            padding: '15px',
                            borderRadius: '8px',
                            backgroundColor: '#f9f9f9'
                        }}>
                            <p><strong>ID:</strong> {record.id}</p>
                            <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> {record.name}</p>
                            <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> {record.status}</p>
                            <p><strong>‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á:</strong> {record.owner}</p>
                            <p><strong>‡∏ß‡∏±‡∏ô‡∏ú‡∏™‡∏°‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå:</strong> {record.breedingDate}</p>
                            <p><strong>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î:</strong> {record.birthDate}</p>
                            <p><strong>‡∏ß‡∏±‡∏ô‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÅ‡∏°‡πà:</strong> {record.separation_date}</p>
                            <p><strong>‡∏ß‡∏±‡∏ô‡∏î‡∏¥‡πâ‡∏ô‡πÄ‡∏≠‡∏≤:</strong> {record.estrus_date}</p>
                        </div>
                    ))}
                </div>
            )}

            {records.length === 0 && (
                <div>
                    <h3>üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
                    <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô</p>
                </div>
            )}
        </div>
    );
};

export default FirebaseTest;
